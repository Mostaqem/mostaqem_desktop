name: Deploying
on:
  release:
    types: [ released ]

jobs:
  release_winget:
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Extract version from tag
        uses: damienaicheh/extract-version-from-tag-action@v1.3.0

      - name: Verify version information
        if: ${{ env.MAJOR == '' || env.MINOR == '' || env.PATCH == '' }}
        run: |
          echo 'ERROR: Invalid version: ${{ env.MAJOR }}.${{ env.MINOR }}.${{ env.PATCH }}'
          exit 1

      - uses: vedantmgoyal9/winget-releaser@main
        with:
          identifier: Mostaqem.Mostaqem
          installers-regex: '\.exe$'
          token: ${{ secrets.PAT }}
          version: ${{ env.MAJOR}}.${{ env.MINOR }}.${{ env.PATCH }}
          fork-user: MezoPeeta

  update-aur:
    name: Updating to AUR
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup SSH Key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.AUR_PRIVATE_KEY }}" > ~/.ssh/aur_key
          chmod 600 ~/.ssh/aur_key
          echo "Host aur.archlinux.org
                User aur
                IdentityFile ~/.ssh/aur_key
                StrictHostKeyChecking no" > ~/.ssh/config
                
      - name: Install Dependencies (Ubuntu)
        run: sudo apt update && sudo apt install -y jq git

      - name: Clone AUR package repository
        env:
          AUR_REPO: "mostaqem"
        run: |
          git clone ssh://aur@aur.archlinux.org/$AUR_REPO.git aur-package
          cd aur-package
          git config user.name "mezopeeta"
          git config user.email ${{ secrets.EMAIL }}

      - name: Get latest release version
        run: |
          latest_version=$(curl -s https://api.github.com/repos/mostaqem/mostaqem_desktop/releases/latest | jq -r .tag_name | sed 's/^v//')
          echo "LATEST_VERSION=$latest_version" >> $GITHUB_ENV

      - name: Get current PKGBUILD version
        run: |
          cd aur-package
          current_version=$(grep -Po '(?<=pkgver=).*' PKGBUILD)
          current_pkgrel=$(grep -Po '(?<=pkgrel=).*' PKGBUILD)
          echo "CURRENT_VERSION=$current_version" >> $GITHUB_ENV
          echo "CURRENT_PKGREL=$current_pkgrel" >> $GITHUB_ENV

      - name: Update PKGBUILD
        run: |
          cd aur-package
          if [[ "$LATEST_VERSION" != "$CURRENT_VERSION" ]]; then
            echo "New version detected! Updating pkgver and resetting pkgrel to 1."
            sed -i "s/pkgver=.*/pkgver=$LATEST_VERSION/" PKGBUILD
            sed -i "s/pkgrel=.*/pkgrel=1/" PKGBUILD
          else
            echo "Same version detected! Incrementing pkgrel."
            new_pkgrel=$((CURRENT_PKGREL + 1))
            sed -i "s/pkgrel=.*/pkgrel=$new_pkgrel/" PKGBUILD
          fi
          updpkgsums

      - name: Commit and push changes
        run: |
          cd aur-package
          git add PKGBUILD
          git commit -m "Update AUR package to version $LATEST_VERSION (pkgrel=$CURRENT_PKGREL)"
          git push
        env:
          GIT_SSH_COMMAND: "ssh -i ~/.ssh/id_ed25519 -o StrictHostKeyChecking=no"

      - name: Cleanup
        run: rm -rf aur-package