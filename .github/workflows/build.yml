name: Mostaqem
on:
  push:
    branches:
      - main
  workflow_dispatch:  

jobs:
  build_windows:
    name: Mostaqem Windows
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up Flutter
        uses: subosito/flutter-action@v2

      - run: flutter config --enable-windows-desktop
      - name: Create .env file
        run: |
          $envContent = @"
          BASE_API=${{ secrets.PRODAPI }}
          MSTORE=false
          DISCORD=${{ secrets.DISCORD }}
          "@
          $envContent | Out-File -FilePath .env -Encoding ascii
        shell: pwsh
        
      - run: flutter pub get

      - run: dart run build_runner build --delete-conflicting-outputs

      - run: flutter build windows --dart-define-from-file .env

      - name: Print all files in the directory
        run: |
          echo "Listing all files in the directory:"
          ls -R build/windows/x64/runner/Release

      - run: cp -r build/windows/x64/runner/Release mostaqem-windows-exe
      - run: tar.exe -a -c -f mostaqem-windows-exe.zip mostaqem-windows-exe

      - run: |
          "%programfiles(x86)%\Inno Setup 6\iscc.exe" "Mostaqem-Inno.iss"
        shell: cmd

      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          draft: true
          prerelease: false
          tag_name: "vnext"
          body: ${{ github.sha }}
          files: |
            mostaqem-windows-exe.zip
            Output/mostaqem-windows-setup.exe
          token: ${{ secrets.PAT }}

  build_linux:
    name: Mostaqem Linux
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable

      - run: sudo apt-get update

      - run: |
          sudo apt-get install -y ninja-build cmake clang mpv libgtk-3-dev libblkid-dev \
            liblzma-dev pkg-config libmpv-dev webkit2gtk-4.1 fuse rpm dpkg-dev zip libfuse2
          wget -O appimagetool "https://github.com/AppImage/appimagetool/releases/download/continuous/appimagetool-x86_64.AppImage"
          chmod +x appimagetool
          sudo mv appimagetool /usr/local/bin/

      - run: flutter config --enable-linux-desktop
      - name: Create .env file
        run: |
          cat > .env <<EOF
          BASE_API= ${{ secrets.PRODAPI }}
          MSTORE=false
          DISCORD=${{ secrets.DISCORD }}
          EOF
          
      - run: flutter pub get

      - run: dart run build_runner build --delete-conflicting-outputs

      - name: Build Linux App
        run: flutter build linux --release --verbose --dart-define-from-file .env

      - name: Create AppImage
        run: |
          rm -rf AppDir
          mkdir -p AppDir/usr/bin
          mkdir -p AppDir/usr/share/icons/hicolor/256x256/apps
          cp -r build/linux/x64/release/bundle/* AppDir/usr/bin/
          cp assets/img/logo.png AppDir/usr/share/icons/hicolor/256x256/apps/mostaqem.png
          cp assets/img/logo.png AppDir/mostaqem.png

          cat <<EOF > AppDir/mostaqem.desktop
          [Desktop Entry]
          Name=Mostaqem
          Exec=usr/bin/mostaqem
          Icon=mostaqem
          Type=Application
          Categories=Education;Spirituality;AudioVideo;Utility;
          EOF

          cat <<EOF > AppDir/AppRun
          #!/bin/sh
          exec "\$(dirname "\$0")/usr/bin/mostaqem" "\$@"
          EOF
          chmod +x AppDir/AppRun

          appimagetool AppDir
          mv Mostaqem*.AppImage build/linux/x64/release/mostaqem-linux.AppImage

      - name: Build RPM Package
        run: |
          cp -fr build/linux/x64/release/bundle linux/debian/usr/share/mostaqem
          mkdir linux/debian/usr/bin
          ln -sr linux/debian/usr/share/mostaqem/mostaqem linux/debian/usr/bin/mostaqem
          sed -i "s:cp -rf :cp -rf $(pwd)/:" linux/rpm/mostaqem.spec
          cd linux/debian
          sed -i "s:FILES_HERE:$(find usr \( -type l -o -type f \) -follow -print | awk '{printf "/%s\\n", $0}'):" ../rpm/mostaqem.spec
          cd ../../
          rpmbuild -bb linux/rpm/mostaqem.spec -D "_topdir $(pwd)/rpmbuild"
          cp rpmbuild/RPMS/x86_64/*.rpm mostaqem-linux-x86_64.rpm

      - name: Build DEB Package
        run: |
          dpkg-deb --build --root-owner-group linux/debian
          cp linux/*.deb mostaqem-linux-x86_64.deb

      - name: Build Tarball
        run: |
          mkdir -p AppDir/
          cp -r linux/debian/usr AppDir/
          ln -sr AppDir/usr/bin/mostaqem AppDir/mostaqem
          tar czf mostaqem-linux-x86_64.tar.gz -C AppDir/ .

      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          draft: true
          prerelease: false
          files: mostaqem-linux-*
          tag_name: "vnext"
          body: ${{ github.sha }}
          token: ${{ secrets.PAT }}

  build-macos:
    name: Mostaqem MacOs
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.JS
        uses: actions/setup-node@v4

      - name: install appdmg
        run: sudo npm install -g appdmg
        
      - name: Create .env file
        run: |
          cat > .env <<EOF
          BASE_API= ${{ secrets.PRODAPI }}
          MSTORE=false
          DISCORD=${{ secrets.DISCORD }}
          EOF
          
      - name: Set up Flutter
        uses: subosito/flutter-action@v2

      - name: Install dependencies
        run: flutter pub get

      - run: dart run build_runner build --delete-conflicting-outputs

      - name: Create and unlock custom keychain
        run: |
          security create-keychain -p "" build.keychain
          security default-keychain -s build.keychain
          security unlock-keychain -p "" build.keychain
          security set-keychain-settings -t 3600 -l ~/Library/Keychains/build.keychain
      - name: Import certificate
        env:
          CERTIFICATE_P12: ${{ secrets.MACOS_CERTIFICATE }}
        run: |
          echo "$CERTIFICATE_P12" | base64 --decode > certificate.p12
          security import certificate.p12 -k ~/Library/Keychains/build.keychain -P "" -T /usr/bin/codesign

      - name: Allow codesign to access the key without prompt
        run: |
          security set-key-partition-list -S apple-tool:,apple: -s -k "" build.keychain

      - name: Build and Sign
        run: sh ./dmg-creator/build_macos.sh
  
      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          draft: true
          prerelease: false
          tag_name: "vnext"
          body: ${{ github.sha }}
          files: mostaqem-macos.dmg
          token: ${{ secrets.PAT }}
